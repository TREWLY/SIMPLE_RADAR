color radar_color=#4dbd5e;
int time_interval=50;
int last_time;
float angle=0;
float angular_speed=1;
int opacity=150;
int min_degree=10;
int max_degree=170;
int background_drawn=0;
int showline=10;
int line_travel=1;
//
int count=0;
//
special_line[] ln=new special_line[180]; //tong hop cac tia quay

void setup() {
  size(680, 400);
  last_time = millis();
  background(0);
  for (int i=0; i<ln.length; i++)
  {
    ln[i]=new special_line(angle);
    angle++;
  }
  smooth();
}
void draw() {
  radar_background();
  scanner();
  delay(10);
}

//code ve background cho radar
void radar_background() {
  //cau hinh co ban cho phan background
  background(0);
  strokeWeight(2);
  stroke(radar_color);
  noFill();
  translate(680/2, 400-30);
  textSize(20);
  textAlign(CENTER);
  int distance=50;
  // Draw radar arc
  for (float i=0.0625; i<4*0.2; i+=0.2)
  {
    fill(radar_color);
    text(distance-=10, (width-width*i)/2-4, 20);
    noFill();
    arc(0, 0, (width-width*i), (width-width*i), PI, TWO_PI);
  }
  fill(radar_color);
  text("TREWLY RADAR", 0, 20);
  //draw radar line
  for (int i=0; i<=180; i+=30)
  {
    float x1 = 0;
    float y1 = 0;
    float x2 = (-width / 2) * cos(radians(i));
    float y2 = (-width / 2) * sin(radians(i));
    // Draw lines
    float textX = (-width / 2) * cos(radians(i));
    float textY = (-width / 2) * sin(radians(i));
    line(x1, y1, x2, y2);
    float angle = atan2(y2 - y1, x2 - x1)+HALF_PI;
    pushMatrix();
    translate(textX, textY);
    rotate(angle);
    textAlign(CENTER, CENTER);
    text(180-i, 0, -18);
    popMatrix();
  }
}

//ham in ra gia tri quet duoc
void scanner() {
  //xu li khi quay chieu kim dong ho
  if(line_travel==1)
  {
    for(int i=min_degree; i<=showline; i++)
    {
      ln[i].show();
    }
    for(int i=min_degree; i<=showline; i++) // lam mo
    {
      ln[i].faded();
    }
    }else{                                    //xu li khi quay nguoc kim dong ho
    for(int i=max_degree; i>=showline; i--)
    {
      ln[i].detect();
      ln[i].show();
    }
    for(int i=max_degree; i>=showline; i--)
    {
      ln[i].faded();                        // lam mo
    }
  }
    showline+=line_travel; //so luong tia quay
    //edge collide
    if (showline==max_degree || showline==min_degree) 
    {
      line_travel*=-1;
      for(int i=0; i<180; i++)
      {
        ln[i].reset();
      }
    }
}